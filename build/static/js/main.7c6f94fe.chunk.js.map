{"version":3,"sources":["components/Register.js","components/ApiFunctions.js","components/Login.js","components/Welcome.js","components/Navbar.js","components/Profile.js","components/AppointmentScreen.js","components/NewAppointment.js","App.js","serviceWorker.js","index.js"],"names":["Register","handleChange","e","value","target","type","checked","setState","name","handleSubmit","preventDefault","state","org","email","password","phone_number","console","log","dob","user","newUser","is_org","axios","post","then","res","data","catch","err","success","props","history","push","errors","this","isAuthenticated","to","className","onSubmit","htmlFor","pattern","placeholder","onChange","defaultCountry","Component","Login","appLogin","Welcome","Navbar","logout","loggedOutLink","loggedInLinks","onClick","Profile","appointments","map","apt","created_date","Date","created","start_time","key","ap_id","style","textDecoration","toLocaleString","o","p","AppointmentScreen","_isMounted","deleted","id","org_email","patient","patient_email","reason","reminders","new_reminder","handleDateChange","date","_d","handleReminderChange","handleNewReminder","rem","moment","format","reminder","handleDelete","handleEdit","edits","reason_for_visit","match","params","get","withCredentials","getAppointment","start","appointment","new_rem","JSON","parse","edited_data","handleSave","readOnly","utils","MomentUtils","DateTimePicker","variant","ampm","onError","disablePast","length","reminder_time","disabled","NewAppointment","appointment_time","createNewAppointment","new_data","user_email","App","navbarLogout","logged_in","handleLogin","login","delete","deleteAppointment","handleNewAppointment","createAppointment","appointment_id","createReminder","handleEditAppointment","put","editAppointment","fetched_data","deleted_data","checkAuth","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7c6f94fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport { register } from \"./ApiFunctions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone_number: \"\",\r\n            password: \"\",\r\n            dob: \"\",\r\n            org: false,\r\n            errors: {},\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const value =\r\n            e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n        this.setState({ [e.target.name]: value });\r\n        // console.log(e.target.value);\r\n        // console.log(this.state);\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        //send HTTP request using the info from state\r\n        e.preventDefault();\r\n\r\n        //make sure fields are filled in correctly\r\n        let is_org=this.state.org\r\n        if(is_org){\r\n            //don't need to check dob\r\n            if(this.state.name===''||this.state.email===''||this.state.password===''||this.state.phone_number===''){\r\n                console.log('missing fields')\r\n                return\r\n            }\r\n        }\r\n        else{\r\n            //check dob\r\n            if(this.state.name===''||this.state.email===''||this.state.password===''||this.state.phone_number===''||\r\n            this.state.dob===''){\r\n                console.log('missing fields')\r\n                return\r\n            }\r\n        }\r\n\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            dob: this.state.dob,\r\n            phone_number: this.state.phone_number,\r\n            password: this.state.password,\r\n            is_org: this.state.org,\r\n        };\r\n        register(newUser).then(res => {\r\n            console.log(res)\r\n            if(res.success){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if(this.props.isAuthenticated){\r\n            return <Redirect to=\"/profile\"/>;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-5 mx-auto\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <h2>Register </h2>\r\n                            <br></br>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    pattern=\"^[a-zA-Z]+( [a-zA-Z_]+)*$\"\r\n                                    placeholder=\"Enter name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone-number\">Phone Number</label>\r\n                                {/* <input type=\"text\" className=\"form-control\" name=\"phone_number\" placeholder=\"Enter your phone number\"\r\n                                value={this.state.phone_number} onChange={this.handleChange} /> */}\r\n                                <PhoneInput\r\n                                    placeholder=\"Enter phone number\"\r\n                                    name=\"phone_number\"\r\n                                    defaultCountry=\"US\"\r\n                                    value={this.state.phone_number}\r\n                                    onChange={(phone_number) => this.setState({ phone_number })}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"dob\">Date of Birth (if registering as patient user)</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"dob\"\r\n                                    value={this.state.dob}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Enter password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <label htmlFor=\"org\">This is an organization account</label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-org-check\"\r\n                                    name=\"org\"\r\n                                    checked={this.state.org}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-lg btn-primary btn-block\">\r\n                                Register\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import axios from 'axios'\r\n\r\nexport const register =(user)=>{\r\n    if(user[\"is_org\"]===true){\r\n        //send request to org/register endpoint\r\n        return axios.post('/api/org/register',\r\n        {\r\n            name:user[\"name\"],\r\n            phone_number:user[\"phone_number\"],\r\n            email:user[\"email\"],\r\n            password:user[\"password\"]\r\n        }).then(res=>{\r\n            return res.data\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    else{\r\n        //otherwise, send to patient/register endpoint\r\n        return axios.post('/api/patient/register',\r\n        {\r\n            name:user[\"name\"],\r\n            phone_number:user[\"phone_number\"],\r\n            dob:user[\"dob\"],\r\n            email:user[\"email\"],\r\n            password:user[\"password\"]\r\n        }).then(res=>{\r\n            return res.data\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const login=(user)=>{\r\n    if(user[\"is_org\"]){\r\n        return axios.post('/api/org/login',\r\n        {\r\n            email:user[\"email\"],\r\n            password:user[\"password\"]\r\n        }).then(res=>{\r\n            return res.data\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    else{\r\n        return axios.post('/api/patient/login',\r\n        {\r\n            email:user[\"email\"],\r\n            password:user[\"password\"]\r\n        }).then(res=>{\r\n            return res.data\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAppointments=()=>{\r\n    return axios.get('/api/appointments/get_all',{withCredentials:true}).then(res=>{\r\n        return res.data\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const getAppointment=(id)=>{\r\n    return axios.get('/api/appointments/get/'+id,{withCredentials:true}).then(res=>{\r\n        return res.data\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const deleteAppointment=(id)=>{\r\n    return axios.delete('/api/appointments/delete/'+id,{withCredentials:true}).then(res=>{\r\n        console.log(res)\r\n        return res\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const createAppointment=(apt)=>{\r\n    return axios.post('/api/make_appointment',\r\n    {\r\n        patient_email:apt.patient_email,\r\n        appointment_time:apt.appointment_time,\r\n        reason:apt.reason\r\n    },{withCredentials:true})\r\n}\r\n\r\nexport const createReminder=(rem)=>{\r\n    return axios.post('/api/reminder/create',\r\n    {\r\n        appointment_id:rem.id,\r\n        reminder:rem.reminder\r\n    },{withCredentials:true}).then(res=>{\r\n        return res\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nexport const editAppointment=(edits)=>{\r\n    return axios.put('/api/appointments/edit/'+edits.id,\r\n    {\r\n        start_time:edits.start_time,\r\n        reason_for_visit:edits.reason_for_visit\r\n    },{withCredentials:true}).then(res=>{\r\n        // console.log(res)\r\n        return res\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}","import React, {Component} from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            is_org:false\r\n        }\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        const value = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n        this.setState({[e.target.name]:value})\r\n        // console.log(e.target.value)\r\n        // console.log(this.state)\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        //send HTTP request to login api endpoint\r\n        console.log('login clicked')\r\n        e.preventDefault()\r\n\r\n        if(this.state.email===''||this.state.password===''){\r\n            console.log(\"missing fields\")\r\n            return\r\n        }\r\n\r\n        const user={\r\n            email:this.state.email,\r\n            password:this.state.password,\r\n            is_org:this.state.is_org\r\n        };\r\n        // console.log(user)\r\n        this.props.appLogin(user)\r\n        \r\n    }\r\n\r\n    render(){\r\n        if(this.props.isAuthenticated){\r\n            return <Redirect to=\"/profile\"/>;\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-5 mx-auto\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <h2>Login</h2>\r\n                            <br/>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Enter email\"\r\n                                value={this.state.email} onChange={this.handleChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Enter password\"\r\n                                value={this.state.password} onChange={this.handleChange} />\r\n                            </div>\r\n\r\n                            <div className=\"form-row\">\r\n                                <label htmlFor=\"is_org\">This is an organization account</label>\r\n                                <input type=\"checkbox\" className=\"form-org-check\" name=\"is_org\"\r\n                                checked={this.state.is_org} onChange={this.handleChange} />\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\r\n                                Login\r\n                            </button>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, {Component} from 'react'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass Welcome extends Component{\r\n    render(){\r\n        if(this.props.isAuthenticated){\r\n            return <Redirect to=\"/profile\"/>;\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron mt-5\">\r\n                    <div className=\"col-sm-8 mx-auto\">\r\n                        <h1> Welcome to ClinicO </h1>\r\n                        <br/>\r\n                        <p className=\"lead\">ClinicO is a platform that provides an easy way for\r\n                        businesses such as dentistries to store people's \r\n                        phone numbers and upcoming appointments and automate sending notifications and reminders\r\n                        </p>\r\n                        <hr className=\"my-4\"></hr>\r\n                        <br/>\r\n                        <h3>Get Started</h3>\r\n                        <br/>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <p className=\"lead\">\r\n                                    <Link to=\"/login\">Login</Link>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <p className=\"lead\">\r\n                                    <Link to=\"/register\">Register</Link>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    logout=()=>{\r\n        console.log(\"logout\")\r\n        this.props.logout()\r\n    }\r\n\r\n    render() {\r\n        const loggedOutLink=(\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n\r\n        const loggedInLinks=(\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\r\n                </li>\r\n\r\n                <li className=\"navbar-nav\">\r\n                    <button type=\"button\" className=\"btn btn-link\" onClick={this.logout}>Log out</button>\r\n                </li>\r\n            </ul>\r\n        )\r\n        // console.log(\"navbar auth\")\r\n        // console.log(this.props.isAuthenticated)\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded\">\r\n                {this.props.isAuthenticated ? loggedInLinks : loggedOutLink}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {Component} from 'react';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n// import {getAppointments} from \"./ApiFunctions\";\r\n\r\nclass Profile extends Component{\r\n    render(){\r\n        if(!this.props.isAuthenticated){\r\n            return <Redirect to=\"/\"/>;\r\n        }\r\n        if(this.props.is_org){\r\n            return(\r\n                <div className=\"container\">\r\n                    <h1>Profile</h1>\r\n                    <br/>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <div className=\"row\">\r\n                                <span className=\"card-title col \">ID #</span>\r\n                                <span className=\"card-title col \">Date Created</span>\r\n                                <span className=\"card-title col \">Organization</span>\r\n                                <span className=\"card-title col\">Patient</span>\r\n                                <span className=\"card-title col \">Start Time</span>\r\n                            </div>\r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {this.props.appointments && this.props.appointments.map(apt=>{\r\n                                let created_date=new Date(apt.created)\r\n                                // console.log(created_date.toString())\r\n                                let start_time=new Date(apt.start_time)\r\n                                // console.log(start_time.toLocaleString())\r\n                                return(\r\n                                <Link key={apt.ap_id} to={'/appointments/' + apt.ap_id} style={{ textDecoration: 'none' }}>\r\n                                    <li className=\"list-group-item\">\r\n                                        <div className=\"row\">\r\n                                            <span className=\"card-title col \">{apt.ap_id}</span>\r\n                                            <span className=\"card-title col \">{created_date.toLocaleString()}</span>\r\n                                            <span className=\"card-title col \">{apt.o.name}</span>\r\n                                            <span className=\"card-title col\">{apt.p.name}</span>\r\n                                            <span className=\"card-title col \">{start_time.toLocaleString()}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <br/>\r\n                    <Link to={'/make_appointment'} style={{ textDecoration: 'none' }}>\r\n                        New Appointment\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"container\">\r\n                    <h1>Profile</h1>\r\n                    <br/>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <div className=\"row\">\r\n                                <span className=\"card-title col \">ID #</span>\r\n                                <span className=\"card-title col \">Date Created</span>\r\n                                <span className=\"card-title col \">Organization</span>\r\n                                <span className=\"card-title col\">Patient</span>\r\n                                <span className=\"card-title col \">Start Time</span>\r\n                            </div>\r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {this.props.appointments && this.props.appointments.map(apt=>{\r\n                                let created_date=new Date(apt.created)\r\n                                // console.log(created_date.toString())\r\n                                let start_time=new Date(apt.start_time)\r\n                                // console.log(start_time.toLocaleString())\r\n                                return(\r\n                                <Link key={apt.ap_id} to={'/appointments/' + apt.ap_id} style={{ textDecoration: 'none' }}>\r\n                                    <li className=\"list-group-item\">\r\n                                        <div className=\"row\">\r\n                                            <span className=\"card-title col \">{apt.ap_id}</span>\r\n                                            <span className=\"card-title col \">{created_date.toLocaleString()}</span>\r\n                                            <span className=\"card-title col \">{apt.o.name}</span>\r\n                                            <span className=\"card-title col\">{apt.p.name}</span>\r\n                                            <span className=\"card-title col \">{start_time.toLocaleString()}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                </Link>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport {getAppointment} from './ApiFunctions';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\n\r\nclass AppointmentScreen extends Component{\r\n    _isMounted=false;\r\n    state={\r\n        deleted:false,\r\n        id:'',\r\n        org:'',\r\n        org_email:'',\r\n        patient:'',\r\n        patient_email:'',\r\n        start_time:'',\r\n        reason:'',\r\n        reminders:[],\r\n        new_reminder:''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        const {id} = this.props.match.params;\r\n        getAppointment(id).then(res=>{\r\n            console.log(res)\r\n            if(res.success && this._isMounted){\r\n                let start=moment(res.appointment.start_time)\r\n                let new_rem=moment()\r\n                this.setState({\r\n                    id:id,\r\n                    org:res.appointment.o.name,\r\n                    org_email:res.appointment.o.email,\r\n                    patient:res.appointment.p.name,\r\n                    patient_email:res.appointment.p.email,\r\n                    start_time:start,\r\n                    reason:res.appointment.reason_for_visit,\r\n                    reminders:JSON.parse(res.appointment.reminders),\r\n                    new_reminder:new_rem\r\n                })\r\n                console.log(this.state)\r\n            }\r\n            else{\r\n                this.setState({deleted:true})\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const value =\r\n            e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n        this.setState({ [e.target.name]: value });\r\n        // console.log(e.target.value);\r\n        // console.log(this.state);\r\n    }\r\n\r\n    handleDateChange=(date)=>{\r\n        this.setState({\r\n            start_time:date._d\r\n        })\r\n        // console.log(this.state.start_time)\r\n    }\r\n\r\n    handleReminderChange=(date)=>{\r\n        this.setState({\r\n            new_reminder:date._d\r\n        })\r\n        // console.log(this.state.start_time)\r\n    }\r\n\r\n    handleNewReminder=()=>{\r\n        let rem=moment(this.state.new_reminder).format('YYYY-MM-DD HH:mm')\r\n        const reminder={\r\n            id:this.state.id,\r\n            reminder:rem\r\n        }\r\n        // console.log(reminder)\r\n        this.props.handleNewReminder(reminder)\r\n    }\r\n\r\n    handleDelete=()=>{\r\n        // console.log('delete appointment')\r\n        this.props.handleDelete(this.state.id)\r\n    }\r\n\r\n    handleEdit=()=>{\r\n        const edits={\r\n            id:this.state.id,\r\n            start_time:moment(this.state.start_time).format('YYYY-MM-DD HH:mm'),\r\n            reason_for_visit:this.state.reason\r\n        }\r\n        this.props.handleEdit(edits)\r\n    }\r\n\r\n\r\n    render(){\r\n        if(!this.props.isAuthenticated){\r\n            return <Redirect to=\"/\"/>;\r\n        }\r\n        if(this.props.edited_data){\r\n            return <Redirect to=\"/profile\"/>;\r\n        }\r\n        console.log(this.props.is_org)\r\n        if(this.props.is_org){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-5 mx-auto\">\r\n                            <form onSubmit={this.handleSave}>\r\n                                <h2>Appointment {this.state.id} Details</h2>\r\n                                <br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"org\">Organization</label>\r\n                                            <input \r\n                                                readOnly \r\n                                                value={this.state.org}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"org_email\">Organization Email</label>\r\n                                            <input \r\n                                                readOnly \r\n                                                value={this.state.org_email}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"patient\">Patient</label>\r\n                                                <input \r\n                                                    readOnly \r\n                                                    value={this.state.patient}\r\n                                                    className=\"form-control\"\r\n                                                />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"patient_email\">Patient Email</label>\r\n                                                <input \r\n                                                    readOnly \r\n                                                    value={this.state.patient_email}\r\n                                                    className=\"form-control\"\r\n                                                />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"start_time\">Start Time</label>\r\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                        <DateTimePicker\r\n                                            name=\"start_time\"\r\n                                            variant=\"inline\"\r\n                                            ampm={true}\r\n                                            value={this.state.start_time}\r\n                                            onChange={this.handleDateChange}\r\n                                            onError={console.log}\r\n                                            disablePast={true}\r\n                                            format=\"YYYY-MM-DD hh:mm a\"\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"reason\">Reason For Appointment</label>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"reason\"\r\n                                        placeholder=\"optional\"\r\n                                        value={this.state.reason}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <span className=\"card-title col \">Current Reminders Set</span>\r\n                                        <ul className=\"list-group list-group-flush\">\r\n                                            {this.state.reminders.length && this.state.reminders.map(rem=>{\r\n                                                let reminder_time=moment(rem).format('YYYY-MM-DD hh:mm a')\r\n                                                // console.log(start_time.toLocaleString())\r\n                                                return(\r\n                                                    <li className=\"list-group-item\" key={reminder_time}>\r\n                                                        <div className=\"row\">\r\n                                                            <span className=\"\">{reminder_time}</span>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"start_time\">Create New Reminder</label>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    name=\"reminder_time\"\r\n                                                    variant=\"inline\"\r\n                                                    ampm={true}\r\n                                                    value={this.state.new_reminder}\r\n                                                    onChange={this.handleReminderChange}\r\n                                                    onError={console.log}\r\n                                                    disablePast={true}\r\n                                                    format=\"YYYY-MM-DD hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                            <input type=\"button\" value=\"Create Reminder\" onClick={this.handleNewReminder}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <input type=\"button\" value=\"Save Changes\" onClick={this.handleEdit}/>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <input type=\"button\" value=\"Delete Appointment\" onClick={this.handleDelete}/>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <br/>\r\n                            </form>\r\n    \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-5 mx-auto\">\r\n                            <form onSubmit={this.handleSave}>\r\n                                <h2>Appointment {this.state.id} Details</h2>\r\n                                <br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"org\">Organization</label>\r\n                                            <input \r\n                                                readOnly \r\n                                                value={this.state.org}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"org_email\">Organization Email</label>\r\n                                            <input \r\n                                                readOnly \r\n                                                value={this.state.org_email}\r\n                                                className=\"form-control\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"patient\">Patient</label>\r\n                                                <input \r\n                                                    readOnly \r\n                                                    value={this.state.patient}\r\n                                                    className=\"form-control\"\r\n                                                />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"patient_email\">Patient Email</label>\r\n                                                <input \r\n                                                    readOnly \r\n                                                    value={this.state.patient_email}\r\n                                                    className=\"form-control\"\r\n                                                />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"start_time\">Start Time</label>\r\n                                    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                        <DateTimePicker\r\n                                            name=\"start_time\"\r\n                                            variant=\"inline\"\r\n                                            ampm={true}\r\n                                            value={this.state.start_time}\r\n                                            disabled={true}\r\n                                            onError={console.log}\r\n                                            disablePast={true}\r\n                                            format=\"YYYY-MM-DD hh:mm a\"\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"reason\">Reason For Appointment</label>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"reason\"\r\n                                        placeholder=\"optional\"\r\n                                        value={this.state.reason}\r\n                                        readOnly\r\n                                    />\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <span className=\"card-title col \">Current Reminders Set</span>\r\n                                        <ul className=\"list-group list-group-flush\">\r\n                                            {this.state.reminders.length && this.state.reminders.map(rem=>{\r\n                                                let reminder_time=moment(rem).format('YYYY-MM-DD hh:mm a')\r\n                                                // console.log(start_time.toLocaleString())\r\n                                                return(\r\n                                                    <li className=\"list-group-item\" key={reminder_time}>\r\n                                                        <div className=\"row\">\r\n                                                            <span className=\"\">{reminder_time}</span>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"start_time\">Create New Reminder</label>\r\n                                            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    name=\"reminder_time\"\r\n                                                    variant=\"inline\"\r\n                                                    ampm={true}\r\n                                                    value={this.state.new_reminder}\r\n                                                    onChange={this.handleReminderChange}\r\n                                                    onError={console.log}\r\n                                                    disablePast={true}\r\n                                                    format=\"YYYY-MM-DD hh:mm a\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                            <input type=\"button\" value=\"Create Reminder\" onClick={this.handleNewReminder}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <Link to=\"/profile\">Back</Link>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <br/>\r\n                            </form>\r\n    \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default AppointmentScreen","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\n\r\nclass NewAppointment extends Component{\r\n    _isMounted=false;\r\n    state={\r\n        org_email:'',\r\n        patient_email:'',\r\n        start_time:moment(),\r\n        reason:'',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const value =\r\n            e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n        this.setState({ [e.target.name]: value });\r\n        // console.log(e.target.value);\r\n        // console.log(this.state);\r\n    }\r\n\r\n    handleDateChange=(date)=>{\r\n        this.setState({\r\n            start_time:date._d\r\n        })\r\n        // console.log(this.state.start_time)\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        console.log('submit new appointment info')\r\n        e.preventDefault()\r\n        let date=moment(this.state.start_time).format('YYYY-MM-DD HH:mm')\r\n        const apt={\r\n            patient_email:this.state.patient_email,\r\n            appointment_time:date,\r\n            reason:this.state.reason\r\n        }\r\n        this.props.createNewAppointment(apt)\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.isAuthenticated){\r\n            return <Redirect to=\"/\"/>;\r\n        }\r\n        else if(!this.props.is_org){\r\n            //orgs create the appointments, not patients\r\n            return <Redirect to=\"/profile\"/>;\r\n        }\r\n        console.log(this.props.new_data)\r\n        if(this.props.new_data){\r\n            return <Redirect to=\"/profile\"/>;\r\n        }\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-5 mx-auto\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <h2>New Appointment</h2>\r\n                            <br/>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"org_email\">Organization Email</label>\r\n                                <input \r\n                                    readOnly \r\n                                    value={this.props.user_email}\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"patient_email\">Patient Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name=\"patient_email\"\r\n                                    placeholder=\"Enter patient's email\"\r\n                                    value={this.state.patient_email}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"start_time\">Start Time</label>\r\n                                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                    <DateTimePicker\r\n                                        name=\"start_time\"\r\n                                        variant=\"inline\"\r\n                                        ampm={true}\r\n                                        value={this.state.start_time}\r\n                                        onChange={this.handleDateChange}\r\n                                        onError={console.log}\r\n                                        disablePast={true}\r\n                                        format=\"YYYY-MM-DD hh:mm a\"\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"reason\">Reason For Appointment</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"reason\"\r\n                                    placeholder=\"optional\"\r\n                                    value={this.state.reason}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-lg btn-primary btn-block\">\r\n                                Create\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewAppointment","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Welcome from \"./components/Welcome\";\nimport Navbar from \"./components/Navbar\";\nimport Profile from \"./components/Profile\";\nimport AppointmentScreen from \"./components/AppointmentScreen\";\nimport NewAppointment from \"./components/NewAppointment\";\nimport {login, getAppointments, deleteAppointment, createAppointment, createReminder, editAppointment } from \"./components/ApiFunctions\";\n\nimport axios from 'axios';\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state={\n      logged_in:false,\n      user_email:'',\n      is_org:false,\n      fetched_data:false,\n      deleted_data:false,\n      new_data:false,\n      edited_data:false,\n      appointments:[]\n    }\n  }\n\n  checkAuth(){\n    axios.get('/api/login/status',{withCredentials:true}).then(res=>{\n        if(res.data.logged_in && !this.state.logged_in){\n            this.setState({\n                logged_in:true,\n                user_email:res.data.user_email,\n                is_org:res.data.is_org\n            })\n        }\n        else if(!res.data.logged_in && this.state.logged_in){\n            this.setState({\n                logged_in:false,\n                user_email:'',\n                is_org:false\n            })\n        }\n    }).catch(err=>{\n        console.log(err)\n    })\n  }\n\n  componentDidMount(){\n    this.checkAuth()\n    console.log(this.state)\n  }\n\n  componentDidUpdate(){\n    if(this.state.logged_in && (!this.state.fetched_data || this.state.deleted_data || this.state.new_data || this.state.edited_data)){\n      \n      getAppointments().then(data=>{\n        if(data.success){\n          this.setState({appointments:data.appointments, fetched_data:true, new_data:false,deleted_data:false,edited_data:false})\n          console.log(data)\n        }\n        \n      })\n    }\n  }\n\n  navbarLogout=()=>{\n    axios.get('/api/logout',{withCredentials:true}).then(res=>{\n      console.log(res)\n      if(res.data.success){\n        this.setState({\n          logged_in:false,\n          user_email:'',\n          is_org:false\n        })\n      }\n      console.log(\"state after logging out\")\n      console.log(this.state)\n      }).catch(err=>{\n        console.log(err)\n    })\n  }\n\n  handleLogin=(user)=>{\n    \n    login(user).then(res=>{\n      console.log(res)\n      if(res.success){\n        this.setState({\n          logged_in:true,\n          is_org:res.is_org,\n          user_email:res.user_email\n        })\n      }\n      // console.log(this.state)\n\n    })\n  }\n\n  handleDelete=(id)=>{\n    deleteAppointment(id).then(res=>{\n      console.log(res)\n      if(res.data.success){\n        this.setState({edited_data:true})\n      }\n    })\n  }\n\n  handleNewAppointment=(apt)=>{\n    //make axios request to add appointment\n    //change state new_data to rerender\n    createAppointment(apt).then(res=>{\n      console.log(res)\n      this.setState({new_data:true})\n    }).catch(err=>{\n      console.log(err)\n    })\n  }\n\n  handleNewReminder=(rem)=>{\n    createReminder(rem).then(res=>{\n      console.log(res)\n      this.setState({edited_data:true})\n    })\n  }\n\n  handleEditAppointment=(edits)=>{\n    console.log(edits)\n    editAppointment(edits).then(res=>{\n      console.log(res)\n      this.setState({edited_data:true})\n    }).catch(err=>{\n      console.log(err)\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar isAuthenticated={this.state.logged_in} logout={this.navbarLogout}/>\n          <Route exact path=\"/\" render={(props) => <Welcome {...props} isAuthenticated={this.state.logged_in}/>} />\n          <Switch>\n            <Route exact path=\"/register\" render={(props) => <Register {...props} isAuthenticated={this.state.logged_in}/>} />\n            <Route exact path=\"/login\" render={(props) => <Login {...props} isAuthenticated={this.state.logged_in} appLogin={this.handleLogin}/>}  />\n            <Route exact path=\"/profile\" render={(props) => <Profile {...props} isAuthenticated={this.state.logged_in} is_org={this.state.is_org} appointments={this.state.appointments}/>} />\n            <Route exact path=\"/make_appointment\" render={(props) => <NewAppointment {...props} isAuthenticated={this.state.logged_in} is_org={this.state.is_org} user_email={this.state.user_email} createNewAppointment={this.handleNewAppointment} new_data={this.state.new_data}/>}/>\n            <Route path=\"/appointments/:id\" render={(props) => <AppointmentScreen {...props} isAuthenticated={this.state.logged_in} is_org={this.state.is_org} handleNewReminder={this.handleNewReminder} handleDelete={this.handleDelete} handleEdit={this.handleEditAppointment}edited_data={this.state.edited_data}/>} />\n            <Route path=\"/:any\" component={Welcome}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}